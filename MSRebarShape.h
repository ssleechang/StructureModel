#pragma once

#include "msobject.h"

// 주공책 표4.4 표준 바-스케줄(p.95)참조
#define NUM_REBAR_GROUP 7   //***
#define NUM_REBAR_SHAPE 39   //***

// 형상에서 필요한 parameter 개수
static long s_MSNumVs[NUM_REBAR_GROUP][NUM_REBAR_SHAPE] =
{//0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22	 23  24  25  26  27  28  29  30  31  32  33  34  35 
  {1, 2, 2, 2, 4, 3, 3, 4, 4, 3, 4,  3,  3,  4,  4,  3},    // T1
  {2, 3, 3, 3, 3, 5, 4, 4, 5, 5, 4,  4,  4,  4,  6,  4},    // T2
  {3, 7, 6, 5, 7, 6, 6, 6, 6, 5, 5,  6,  5,  5,  5,  5,  5,  5,  5,  5,  4,  5,  3},    // T3
  {6, 6, 6, 6, 6, 3, 2, 8, 9, 9, 6,  7,  11, 8,  8,  9,  8,  9},    // T4
	{3, 6, 5, 5, 6, 6, 6, 8, 8, 7, 9,  9,  8,  8,  8, 10,  12, 11, 12, 12, 10, 7,  7,  10,  10, 11, 11, 12, 4, 10, 10, 6, 7, 7, 11, 9, 6, 5, 5}, // T5
	{4, 5, 5, 0, 0, 4, 5, 0, 5, 0, 0,  0,  0,  0,  0,  0,  0,  0,  4, 0,  0,  0,  0,  0,  0,  0,  0,  4, 3},	// T6
	{1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0},    // T7
};

static long s_MSBarValue[NUM_REBAR_GROUP][NUM_REBAR_SHAPE][15] = 
{  //0  1  2  3  4  5  6  7  8  9 10 11	12
  {//A  B  C  D  E  F  G  H  I  J  K  L  O     // T1
    {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T1-00
    {0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0},       // T1-01
    {0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0},       // T1-02
    {0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0},       // T1-03
    {1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},       // T1-04
    {1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},       // T1-05
    {1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},       // T1-06
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},       // T1-07
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},       // T1-08
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},       // T1-09
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},				// T1-10
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},				// T1-11
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},				// T1-12
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},				// T1-13
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0},				// T1-14
		{1, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},				// T1-15

  },
  {//A  B  C  D  E  F  G  H  I  J  K  L  O     // T2
    {0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T2-00
    {1, 2, 3, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0},       // T2-01
    {1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T2-02
    {1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T2-03
    {1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T2-04
    {1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0},       // T2-05
    {1, 2, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0},       // T2-06
		{1, 2, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0},       // T2-07
		{1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0},       // T2-08
		{1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0},       // T2-09
		{1, 2, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0},       // T2-10
		{1, 2, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0},       // T2-11
		{0, 1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0},       // T2-12
		{0, 1, 2, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0},       // T2-13
		{0, 1, 2, 0, 0, 0, 3, 4, 0, 5, 6, 0, 0},       // T2-14
		{1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0},       // T2-15
  },
  {//A  B  C  D  E  F  G  H  I  J  K  L  O       // T3
    {0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T3-00
    {1, 2, 3, 4, 0, 0, 5, 6, 0, 7, 0, 0, 0},       // T3-01
    {1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 0, 0, 0},       // T3-02
    {1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-03  //***
    {1, 2, 3, 4, 0, 0, 5, 6, 0, 7, 0, 0, 0},       // T3-04
    {1, 2, 3, 4, 0, 0, 5, 0, 0, 6, 0, 0, 0},       // T3-05
    {1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 0, 0, 0},       // T3-06
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 0, 0, 0},       // T3-07
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 0, 0, 0},       // T3-08
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-09
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-10
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 0, 0, 0},       // T3-11
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-12
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-13
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-14
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-15
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-16
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-17
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0},       // T3-18
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0},       // T3-19
		{1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T3-20
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0},       // T3-21
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T3-22
		
  },
  {//A  B  C  D  E  F  G  H  I  J  K  L  O		     // T4
    {1, 2, 3, 4, 5, 0, 6, 0, 0, 0, 0, 0, 0},       // T4-00
    {1, 2, 3, 4, 5, 0, 6, 0, 0, 0, 0, 0, 0},       // T4-01
    {1, 2, 3, 4, 5, 0, 6, 0, 0, 0, 0, 0, 0},       // T4-02
    {1, 2, 3, 4, 5, 0, 6, 0, 0, 0, 0, 0, 0},       // T4-03
    {1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 6, 0, 0},       // T4-04		
    {1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3},       // T4-05
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2},       // T4-06
	{1, 2, 3, 4, 5, 0, 6, 7, 0, 8, 0, 0, 0},       // T4-07
	{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0, 0},       // T4-08
	{1, 2, 3, 4, 5, 0, 6, 7, 0, 8, 9, 0, 0},       // T4-09
	{1, 2, 3, 4, 0, 0, 5, 0, 0, 0, 6, 0, 0},       // T4-10
	{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 0},       // T4-11
	{1, 2, 3, 4, 5, 6, 7, 8, 0, 9,10, 0, 11},      // T4-12
	{1, 2, 3, 4, 5, 0, 6, 7, 0, 0, 8, 0, 0},       // T4-13
	{1, 2, 3, 4, 5, 0, 6, 7, 0, 0, 8, 0, 0},       // T4-14
	{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0, 0},       // T4-15
	{1, 2, 3, 4, 5, 0, 6, 7, 0, 0, 8, 0, 0},       // T4-16
	{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0, 0},       // T4-17
  },
  {//    A  B  C  D  E  F  G  H  I  J  K  L  O  H2 K2			// T5
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-00
		{1, 2, 3, 4, 0, 0, 5, 0, 0, 6, 0, 0, 0, 0, 0},		// T5-01
		{1, 2, 3, 4, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0},		// T5-02
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 0},		// T5-03
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 6, 0, 0},		// T5-04
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 6, 0, 0},		// T5-05
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 6, 0, 0},		// T5-06	
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 6, 7, 8},		// T5-07
		{1, 2, 3, 4, 0, 0, 0, 5, 0, 6, 7, 0, 8, 0, 0},		// T5-08
		{1, 2, 3, 4, 0, 0, 0, 5, 0, 0, 6, 0, 7, 0, 0},		// T5-09
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 7, 8, 0, 9, 0, 0},		// T5-10
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 7, 8, 0, 9, 0, 0},		// T5-11
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 8, 0, 0},		// T5-12
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 8, 0, 0},		// T5-13
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 6, 7, 8},		// T5-14	
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-15 
		{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0,10, 11,12},		// T5-16
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 7, 8, 0, 9, 10,11},		// T5-17
		{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0,10, 11,12},		// T5-18
		{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0,10, 11,12},		// T5-19 
	 //A  B  C  D  E  F  G  H  I  J  K  L  O  H2 K2			// T5
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-20
		{0, 1, 2, 3, 4, 0, 0, 5, 0, 0, 6, 0, 7, 0, 0},		// T5-21
		{0, 1, 2, 3, 4, 0, 0, 5, 0, 0, 6, 0, 7, 0, 0},		// T5-22
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-23
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-24
		{0, 1, 2, 3, 4, 5, 0, 6, 7, 0, 8, 0, 9, 10,11},		// T5-25
		{0, 1, 2, 3, 4, 5, 0, 6, 7, 0, 8, 0, 9, 10,11},		// T5-26
		{1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 9, 0,10, 11,12},		// T5-27			
		{0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-28		 
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-29	
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 8, 9, 10},		// T5-30	 
		{0, 1, 2, 3, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-31	 
		{1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-32		 
		{1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0},  	// T5-33
		{1, 2, 3, 4, 5, 6, 7, 8, 0, 9,10, 0,11, 0, 0},		// T5-34
		{1, 2, 3, 4, 5, 6, 7, 0, 0, 8, 0, 0, 9, 0, 0},		// T5-35
		{1, 2, 3, 0, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 6},		// T5-36
		{1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-37
		{1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		// T5-38
	},
	{//A  B  C  D  E  F  G  H  I  J  K  L  O  R // T6
		{0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 4},			// T6-00 // B H O R
		{1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5},			// T6-01 // A B C O R
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0},			// T6-02 // B C D O H
		{1, 2, 3, 4, 0, 0, 5, 6, 0, 0, 7, 0, 8, 0},			// T6-03 
		{1, 2, 3, 0, 0, 0, 0, 4, 0, 5, 6, 0, 7, 8},			// T6-04 
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4},			// T6-05 // B C D R
		{0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-06 // B C D E F
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 0, 0},			// T6-07
		{0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-08 // B C D E F
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-09 
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-10 
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0},			// T6-11 
		{0, 1, 2, 3, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0},			// T6-12 
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 0, 0},			// T6-13 
		{0, 1, 2, 3, 4, 5, 0, 6, 0, 0, 7, 0, 0, 0},			// T6-14 
		{0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},			// T6-15 
		{0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},			// T6-16 
		{0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-17 
		{0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-18 // B C D E
		{1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-19
		{1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-20 
		{1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-21
		{0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-22
		{0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-23
		{0, 1, 2, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0},			// T6-24
		{1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-25
		{0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0},			// T6-26
		{0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4},			// T6-27 // B C D R
		{0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},			// T6-28 // B C R
	},	
	 {//A  B  C  D  E  F  G  H  I  J  K  L  O     // 71
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T7-00
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T7-01
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T7-02
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T7-03
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},       // T7-04
		{0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0},       // T7-05
		{0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0},       // T7-06
	}  
};


enum MSREBAR_SHAPECODE
{
	MST1_00 = 1000,
	MST1_01,	MST1_02,	MST1_03,	MST1_04,	MST1_05,	MST1_06,	MST1_07,	MST1_08,	MST1_09, MST1_10,
	MST1_11,	MST1_12,	MST1_13,	MST1_14,	MST1_15,

	MST2_00 = 2000,
	MST2_01,	MST2_02,	MST2_03,	MST2_04,	MST2_05,	MST2_06,	MST2_07,	MST2_08,	MST2_09,	MST2_10,
	MST2_11,	MST2_12,	MST2_13,	MST2_14,	MST2_15,

	MST3_00 = 3000,
	MST3_01,	MST3_02,	MST3_03,	MST3_04,	MST3_05,	MST3_06,	MST3_07,	MST3_08,	MST3_09,	MST3_10,
	MST3_11,	MST3_12,	MST3_13,	MST3_14,	MST3_15,	MST3_16,	MST3_17,	MST3_18,	MST3_19,	MST3_20,
	MST3_21,	MST3_22,

	MST4_00 = 4000,
	MST4_01,	MST4_02,	MST4_03,	MST4_04,	MST4_05,	MST4_06,	MST4_07,	MST4_08,	MST4_09,	MST4_10,
	MST4_11,	MST4_12,	MST4_13,	MST4_14,	MST4_15,	MST4_16,	MST4_17,	MST4_18,	MST4_19,	MST4_20,
	MST4_21,	MST4_22,	MST4_23,	MST4_24,	MST4_25,	

	MST5_00 = 5000,
	MST5_01,	MST5_02,	MST5_03,	MST5_04,	MST5_05,	MST5_06,	MST5_07,	MST5_08,	MST5_09,	MST5_10,
	MST5_11,	MST5_12,	MST5_13,	MST5_14,	MST5_15,	MST5_16,	MST5_17,	MST5_18,	MST5_19,	MST5_20,
	MST5_21,	MST5_22,	MST5_23,	MST5_24,	MST5_25,	MST5_26,	MST5_27,	MST5_28,	MST5_29,	MST5_30,
	MST5_31,	MST5_32,	MST5_33,	MST5_34,	MST5_35,	MST5_36,	MST5_37,	MST5_38,

	MST6_00 = 6000,
	MST6_01,	MST6_02,	MST6_03,	MST6_04,	MST6_05,	MST6_06,	MST6_07,	MST6_08,	MST6_09,	MST6_10,
	MST6_11,	MST6_12,	MST6_13,	MST6_14,	MST6_15,	MST6_16,	MST6_17,	MST6_18,	MST6_19,	MST6_20,
	MST6_21,	MST6_22,	MST6_23,	MST6_24,	MST6_25,	MST6_26,	MST6_27,	MST6_28,

	MST7_00 = 7000,
	MST7_01,	MST7_02,	MST7_03,	MST7_04,	MST7_05,	MST7_06,	MST7_07,	MST7_08,	MST7_09,	MST7_10,
	MST7_11,

	MST8_00 = 8000,
	MST8_01,	MST8_02,	MST8_03,	MST8_04,	MST8_05,	MST8_06,	MST8_07,	MST8_08,	MST8_09,

	MST0_00 = 0	// Undefind																
};


class MSElement;
class StructureModel_CLASS MSRebarShape : public MSObject
{
public:
	MSRebarShape(long TheID=0);
	MSRebarShape(CString Name, double dDia, long IsTieStrp=0);
	~MSRebarShape(void);
	void Serialize( CArchive& archive );
	DECLARE_SERIAL(MSRebarShape)
	virtual MSObject* Copy(bool bNewID = true);
	virtual void CopyFromMe(MSRebarShape* pSource, bool bNewID = true);
	virtual void Dump(EFS::EFS_Buffer& buffer);
	virtual void Recovery(EFS::EFS_Buffer& buffer);

    long m_ID;
 	long GetID();  // m_ID가 유효하면 (m_ID > 0)있으면 리턴하고, 0이면 ms_LastID+1으로 m_ID 세팅하고 리턴한다.
 	static long ms_LastID;
 	static void SetLastID(long NewID); // NewID > ms_LastID 이면 치환. 아니면 무시

	double  m_TotalLength;   // 토탈 절단길이
	long m_nGCode;
	long m_nSCode;
	double*   m_Vs;	// 철근 형상 파라미터들 (1st Parameter Address)
	// 형상에 따라 필요한 갯수 생성 후 A, B, C 등의 구분은 함수에서 처리

	CString		m_Name;
	double		m_dDia;		// 철근 지름		
	BOOL			m_UpDown;
	GMVector	m_Pos;
	double		m_dDir;
	BOOL			m_bReverse;
	long      m_nBarSetTableNum;
	BOOL			m_IsTieStrp;

	double GetTotalLength();
	//─────────────────────────
	double GetTotalLenGroup1();
	double GetTotalLenGroup2();
	double GetTotalLenGroup3();
	double GetTotalLenGroup4();
	double GetTotalLenGroup5();
	double GetTotalLenGroup6();
	double GetTotalLenGroup7();
	double GetTotalLenGroup8();
	double GetTotalLenAllAdd();
	double GetTotalLenHaunch();		//JY Add
	//─────────────────────────
	BOOL IsSameShape(MSRebarShape* Src);

	double a1(double HookDeg = 180.);  // 갈고리 여장길이 (KBC 2005 0505.2.1)
  double a2();	// 구부림 반지름 + 철근직경
  double BendDia();  // KBC 2005 0505.2.1

	static long MakeBarShapeCode(long nGCode, long nSCode);
	CString GetStringShapeCode();

	double& SetA();
	double& SetB();
	double& SetC();
	double& SetD();
	double& SetE();
	double& SetF();
	double& SetG();
	double& SetH();
	double& SetI();
	double& SetJ();
	double& SetK();
	double& SetL();
	double& SetO();
	double& SetHH();
	double& SetKK();

	double GetA();
	double GetB();
	double GetC();
	double GetD();
	double GetE();
	double GetF();
	double GetG();
	double GetH();
	double GetI();
	double GetJ();
	double GetK();
	double GetL();
	double GetO();
	double GetHH();
	double GetKK();

	void GetRotateDegLine(double * RotateDeg, BOOL direction, double Y, double X);
	CString GetTotalLenString_RSTeamType();
};
